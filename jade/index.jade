extends ./jade/_layout.jade
block post
	//- aquí empieza el contenido del post
	h2 ¿Qué es Yarn? y ¿Cómo usarlo? 
	p.pre-irrelevant
		|Yarn es un administrador de dependencias relativamente nuevo, es open source y fue creado por miembros de Facebook y Google, su principal característica es la rápidez.
		
	h2 ¿Cómo trabaja Yarn?, ¿Qué lo hace tan interesante?
	p.pre-irrelevant
		|Es muy difícil no comparar a 
		b Yarn 
		| con el 
		b cli de npm 
		|, así que veamos algunas características de Yarn:
	p
		span.capitalize.yarn 1.
		|  Yarn 
		b almacena en caché local todos los paquetes que descarga por primera vez 
		|, para evitar descargarlos más de 1 vez.  
		|Esto hace que puedas realizar instalaciones aunque no cuentes con conexión a Internet.
		|Para esto Yarn crea una carpeta local donde administra los paquetes que nosotros instalamos.
		
	p
		span.capitalize.yarn 2.
		|  Yarn 
		b paraleliza las operaciones de descarga de paquetes 
		| para maximizar la utilización de los recursos, por lo que los tiempos de instalación son mucho más rápidos que los de otros administradores de dependencias. Yarn va descargando dependencias en forma paralela, sin necesidad de esperar a que el paquete anterior se termine de descargar.

	p
		span.capitalize.yarn 3.
		|  Yarn no detiene la instalación cuando la solicitud de una dependencia falló. Yarn vuelve a realizar las solicitudes necesarias para tener correctamente instalados los paquetes y 
		b no se detiene por un fallo
		|, siempre continuará instalando las demás dependencias gracias a su descargar paralela.

	h2 ¿Qué problemas resuelve Yarn para un desarrollador?
	
	p
		|Antes de la llegada de Yarn, teníamos muchos problemas para administrar las dependencias de un proyecto, 
		|debido a que la instalación de dependencias era muy lenta, tediosa y también generaba muchos fallos, 
		|por lo cual llevar a cabo la instalación de dependencias de un proyecto era una tarea muy engorrosa, 
		|muchas veces el tamaño del proyecto era proporcional a los problemas que teníamos.
	
	p
		|Yarn resuelve todos estos problemas debido a que nos ofrece una administración eficiente de dependencias. 
	
	h2 ¿Cómo instalo Yarn desde Npm?
	p.pre-irrelevant
		|Muy simple. Con el siguiente comando:

	pre(class="prettyprint lang-json")
		code.
			npm install -g yarn

	h2 ¿Cómo instalo Yarn en MacOS y/o Linux?
	
	pre(class="prettyprint lang-json")
		code.
			curl -o- -L https://yarnpkg.com/install.sh | bash

	h2 ¿Comandos básicos de Yarn?
	p.pre-irrelevant
		|Yarn cuenta con muchos comandos, en este artículo veremos algunos de los comandos básicos:

	h3 yarn init
	p.pre-irrelevant
		|Mediante este comando 
		b Yarn 
		|crea un nuevo proyecto.

	pre(class="prettyprint lang-json")
		code.
			yarn init

	p.pre-irrelevant
		|Nos preguntará: el nombre de nuestro proyecto, versión, descripción, archivo inicial, 
		|repositorio, autor y el tipo de licencia de nuestro proyecto.

	p.pre-irrelevant
		|Luego de esto se habrá creado nuestro archivo 
		span.inline_file package.json

	h3 yarn add
	p.pre-irrelevant
		|Mediante este comando 
		b Yarn 
		|agrega una dependencia a nuestro proyecto.

	pre(class="prettyprint lang-json")
		code.
			yarn add nombre_del_paquete

	h3 Ejemplos de uso de Yarn Add

	p.pre-irrelevant
		b Agregando como dependencia principal el paquete Express

	pre(class="prettyprint lang-json")
		code.
			yarn add express

	p.pre-irrelevant
		b Agregando como dependencia de desarrollo el paquete Gulp

	pre(class="prettyprint lang-json")
		code.
			yarn add --dev gulp

	h3 yarn upgrade
	p.pre-irrelevant
		|Mediante este comando 
		b Yarn 
		|actualiza una dependencia de nuestro proyecto.

	pre(class="prettyprint lang-json")
		code.
			yarn upgrade nombre_del_paquete

	h3 Ejemplo de uso de Yarn Upgrade

	p.pre-irrelevant
		b Actualizando el paquete Gulp

	pre(class="prettyprint lang-json")
		code.
			yarn upgrade gulp

	h3 yarn remove
	p.pre-irrelevant
		|Mediante este comando 
		b Yarn 
		|elimina una dependencia de nuestro proyecto.

	pre(class="prettyprint lang-json")
		code.
			yarn remove nombre_del_paquete

	h3 Ejemplo de uso de Yarn Remove

	p.pre-irrelevant
		b Eliminando el paquete Gulp como dependencia de nuestro proyecto

	pre(class="prettyprint lang-json")
		code.
			yarn remove gulp

	h3 yarn install
	p.pre-irrelevant
		|Mediante este comando 
		b Yarn 
		|instala todas las dependencias de nuestro proyecto.

	p.pre-irrelevant
		|Para poder utilizar este comando debemos tener nuestro archivo 
		span.inline_file package.json
		|  previamente creado. Por ejemplo, podemos usar un proyecto actual creado con 
		b npm 
		|y probar instalarlo con Yarn.

	pre(class="prettyprint lang-json")
		code.
			yarn install

	h3 Ejemplo de uso de Yarn Install

	p.pre-irrelevant
		b Instalando 

	pre(class="prettyprint lang-json")
		code.
			yarn install

	p.pre-irrelevant
		|También puedes utilizar sólo el comando Yarn

	pre(class="prettyprint lang-json")
		code.
			yarn

	h3 yarn run
	p.pre-irrelevant
		|Mediante este comando 
		b Yarn 
		|ejecuta las tareas declaradas en la llave 'scripts' de nuestro package.json.

	h3 Ejemplo de uso de Yarn Run

	p.pre-irrelevant
		|Teniendo el siguiente contenido en nuestro archivo package.json:
	p
		b package.json:

	pre(class="prettyprint lang-json")
		code.
			"scripts": {
				"tarea": "echo 'hola, soy una tarea ejecutada con Yarn!'"
			}

	p
		|Y en nuestro terminal ejecutamos la tarea llamada tarea, con el siguiente comando:

	pre(class="prettyprint lang-json")
		code.
			yarn run tarea

	p.pre-irrelevant
		|Y veremos en nuestro terminal el mensaje: "hola, soy una tarea ejecutada con Yarn!".
		
	p.pre-irrelevant
		|Con esto hemos llegado al final del artículo. Yarn es una herramienta muy interesante para administrar 
		|nuestras dependencias, 
		|les recomiendo darle una oportunidad y empezar a usarlo. Estoy seguro que rápidamente verán el gran beneficio de usar Yarn.

	p.pre-irrelevant
		|Si les ha interesado Yarn, les recomiendo visitar su 
		a(href="https://yarnpkg.com/en/docs", target="_blank", title="documentación de Yarn") documentación
		|, ya que Yarn es muy completo y tiene muchas opciones adicionales.

	p
		img.aligncenter(src="http://frontendlabs.io/wp-content/uploads/2016/11/yarn-feature-speed.png", alt="yarn feature speed")

	h2 Fuentes
	p
		|Yarn. 
		i Documentation.
		|  [En línea] [Fecha de consulta: 21 de Octubre del 2016]. 
		br
		|Disponible en: 
		a(href="https://yarnpkg.com/en/docs/cli/", target="_blank",
		title="yarnpkg") https://yarnpkg.com/en/docs/cli/
		|.
	p
		|Npm. 
		i Javascript package manager.
		|  [En línea] [Fecha de consulta: 21 de Octubre del 2016]. 
		br
		|Disponible en: 
		a(href="https://docs.npmjs.com/cli/npm", target="_blank",
		title="npm cli") https://docs.npmjs.com/cli/npm
		|.
		
