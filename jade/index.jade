extends ./jade/_layout.jade
block post
	//- aquí empieza el contenido del post
	h2 ¿Qué es Yarn de Facebook y Cómo usarlo? 
	p.pre-irrelevant
		|Yarn es un administrador de dependencias relativamente nuevo, su principal característica es la rápidez.
		
	h2 ¿Cómo trabaja Yarn? ¿Qué lo hace tan interesante?
	p.pre-irrelevant
		|Es muy difícil no comparar a Yarn con el cliente de npm, así que veamos algunas aspectos de cómo trabaja Yarn:
	p
		|Yarn 
		b almacena en caché todos los paquetes que descarga 
		| para que nunca vuelva a necesitarlos. Para esto Yarn crea una carpeta global donde administra los paquetes que nosotros instalamos en nuestros proyectos.
		
	p
		|Yarn 
		b paraleliza las operaciones de descarga de paquetes 
		| para maximizar la utilización de los recursos, por lo que los tiempos de instalación son mucho más rápidos que los de otros administradores de dependencias. Yarn va descargando dependencias en forma paralela, sin necesidad de esperar a que el paquete anterior se termine de descargar.

	p
		|Yarn 
		b puede trabajar de modo off-line
		|, con lo cual si antes instalaste un paquete, Yarn puede instalarlo de nuevo sin conexión a Internet.
				
	p
		|Yarn 
		b usa registros múltiples
		|, esto quiere decir que no solo te permite administrar tus dependencias de Npm, sino que también te permite instalar dependencias de Bower.

	p
		|Yarn no detiene la instalación cuando la solicitud de una dependencia falló. Yarn vuelve a realizar las solicitudes necesarias para tener correctamente instalados los paquetes y 
		b no se detiene por un fallo
		|, siempre continuará instalando las demás dependencias.

	h2 ¿Qué problemas resuelve Yarn para un desarrollador?
	
	p
		|Antes de la llegada de Yarn, teníamos muchos problemas para administrar las dependencias de un proyecto, debido a que la instalación de dependencias era muy lenta, tediosa y también generaba muchos fallos, por lo cual llevar a cabo la instalación de dependencias de un proyecto era una tarea muy engorrosa, muchas veces el tamaño del proyecto era proporcional a los problemas que teníamos.
	
	h2 ¿Cómo instalo Yarn desde Npm?
	p.pre-irrelevant
		|Muy simple. Con el siguiente comando:

	pre(class="prettyprint lang-json")
		code.
			npm install -g yarn

	h2 ¿Cómo instalo Yarn en MacOS y/o Linux?
	
	pre(class="prettyprint lang-json")
		code.
			curl -o- -L https://yarnpkg.com/install.sh | bash

	h2 ¿Comandos básicos de Yarn?
	p.pre-irrelevant
		|Yarn cuenta con muchos comandos, en este artículo veremos algunos de los comandos básicos:
	
	h3 Crear un nuevo proyecto con Yarn
	p.pre-irrelevant
		|Mediante este comando Yarn apertura un nuevo proyecto. Esto creará nuestro archivo 'package.json'.
	pre(class="prettyprint lang-json")
		code.
			yarn init

	pre(class="prettyprint lang-json")
		code.
			yarn init
			yarn init v0.16.1
			question name (yarn-demo): 
			question version (1.0.0): 
			question description: 
			question entry point (index.js): 
			question git repository: 
			question author: 
			question license (MIT): 
			success Saved package.json
			Done in 16.75s.


	blockquote.mini
		|Mediante la instrucción `npm i -S` podemos instalar las dependencias de nuestro proyecto

	p
		img.aligncenter.bordered(src="http://frontendlabs.io/wp-content/uploads/2016/06/customers-get-response-id-2.png", alt="customers get response id 2")


	h2 Fuentes
	p
		|Yarn. 
		i Documentation.
		|  [En línea] [Fecha de consulta: 21 de Octubre del 2016]. 
		br
		|Disponible en: 
		a(href="https://yarnpkg.com/en/docs/", target="_blank",
		title="yarnpkg") https://yarnpkg.com/en/docs/
		|.
